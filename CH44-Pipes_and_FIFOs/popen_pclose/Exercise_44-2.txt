Implement popen() and pclose(). ALthough these functions are simplified by not
requiring the signal handling employed in the implementation of system(),
you will need to be careful to correctly bind the pipe ends to file
streams in each process, and to ensure that all unused descriptors referring to 
the pipe ends are closed. Since children created by multiple calls to popen()
may be running at one time, you will need to maintain a data structure that
associates the file stream pointers allocated by popen() with the corresponding
child process IDs.
(If using an array for this purpose, the value returned by the fileno() function, 
which obtains the file descriptor corresponding to a file stream, can be used to index the
array.) Obtaining the correct process ID from this structure will allow pclose() to
select the child upon which to wait. This structure will also assist with the SUSv3
requirement that any still-open file streams created by earlier calls to popen() must
be closed in the new child process.
